//>>built
define("rdforms/template/OntologyStore",["dojo/_base/declare"],function(g){return g(null,{_registry:null,importRegistry:function(a){dojo.mixin(this._registry,a)},getChoices:function(a,c){var d=this._findChoices(a);if(null!=d){if(null==c)return d;c(d)}},constructor:function(){this._registry={}},_findChoices:function(a){var c=this._registry[a.getOntologyUrl()];if(null!=c)for(var d=0;d<c.length;d++){var b=c[d];if(this._objEqual(b.constraints,a.getConstraints())&&a.getParentProperty()==b.parentProperty&&
a.getHierarchyProperty()==b.hierarchyProperty&&a.isParentPropertyInverted()==(b.isParentPropertyInverted||!1)&&a.isHierarchyPropertyInverted()==(b.isHierarchyPropertyInverted||!1))return b.choices}},_objEqual:function(a,c){var d={},b;for(b in a){if(a.hasOwnProperty(b)){var e=a[b],f=c[b];if(dojo.isObject(e)&&dojo.isObject(f)){if(!this._objEqual(e,f))return!1}else if(a[b]!==c[b])return!1}d[b]=!0}for(b in c)if(!0!==d[b]&&c.hasOwnProperty(b))if(e=a[b],f=c[b],dojo.isObject(e)&&dojo.isObject(f)){if(!this._objEqual(e,
f))return!1}else if(c[b]!==a[b])return!1;return!0},_constructLoadUrl:function(a){var c=[];c.push("constr\x3d"+encodeURIComponent(dojo.toJson(a.getConstraints())));if(null!=a.getParentProperty()){var d=!0===a.isParentPropertyInverted()?"ipp\x3d":"pp\x3d";c.push(d+encodeURIComponent(a.getParentProperty()))}null!=a.getHierarchyProperty()&&(d=!0===a.isHierarchyPropertyInverted()?"ihp\x3d":"hp\x3d",c.push(d+encodeURIComponent(a.getHierarchyProperty())));return a.getOntologyUrl()+"?"+c.join("\x26")}})});
//# sourceMappingURL=OntologyStore.js.map