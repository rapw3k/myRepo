//>>built
define("rdforms/template/Choice",["dojo/_base/declare","../utils","./Item"],function(g,d,h){var c=function(a){null!=a&&a.sort(function(a,c){var e=d.getLocalizedValue(a.label).value||a.value,f=d.getLocalizedValue(c.label).value||c.value;return e>f?1:e<f?-1:0})};return g(h,{_source:null,_ontologyStore:null,_choices:{},getChoices:function(a){return this.getStaticChoices(a)||this.getDynamicChoices(a)||[]},hasChoices:function(a){a=this.getSource(a);return null!=a.ontologyUrl||null!=a.choices},getStaticChoices:function(a){var b=
this.getSource(a);b.choices&&(a&&this.isExtention()?this._origStaticIsSorted||(c(b.choices),this._origStaticIsSorted=!0):this._staticIsSorted||(c(b.choices),this._staticIsSorted=!0));return b.choices},setStaticChoices:function(a){var b=this.getSource(!0);b.choices!==a&&(null!=a&&(c(a),this._origStaticIsSorted=!0),b.choices=a,this.refreshExtends())},setExtends:function(a){this.inherited("setExtends",arguments);delete this._staticIsSorted;delete this._origStaticIsSorted},getDynamicChoices:function(a){if(null==
this._dynamicChoices){if(null==a)return this._dynamicChoices=this._ontologyStore.getChoices(this),c(this._dynamicChoices),this._dynamicChoices;this._ontologyStore.getChoices(this,dojo.hitch(this,function(b){c(b);a(this._dynamicChoices)}))}else{if(null==a)return this._dynamicChoices;a(this._dynamicChoices)}},getOntologyUrl:function(a){return this.getSource(a).ontologyUrl},setOntologyUrl:function(a){var b=this.getSource(!0);null==a||""==a?delete b.ontologyUrl:b.ontologyUrl=a;this.refreshExtends()},
getParentProperty:function(a){return this.getSource(a).parentProperty},setParentProperty:function(a){var b=this.getSource(!0);null==a||""==a?delete b.parentProperty:b.parentProperty=a;this.refreshExtends()},getHierarchyProperty:function(a){return this.getSource(a).hierarchyProperty},setHierarchyProperty:function(a){var b=this.getSource(!0);null==a||""==a?delete b.hierarchyProperty:b.hierarchyProperty=a;this.refreshExtends()},isParentPropertyInverted:function(a){return!0===this.getSource(a).isParentPropertyInverted},
setParentPropertyInverted:function(a){var b=this.getSource(!0);!0===a?b.isParentPropertyInverted=!0:delete b.isParentPropertyInverted;this.refreshExtends()},isHierarchyPropertyInverted:function(a){return!0===this.getSource(a).isHierarchyPropertyInverted},setHierarchyPropertyInverted:function(a){var b=this.getSource(!0);a?b.isHierarchyPropertyInverted=!0:delete b.isHierarchyPropertyInverted;this.refreshExtends()},constructor:function(a){this._ontologyStore=a.ontologyStore}})});
//# sourceMappingURL=Choice.js.map